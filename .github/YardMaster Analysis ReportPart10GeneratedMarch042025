# YardMaster Analysis ReportPart10GeneratedMarch042025
Generated: March 04, 2025

## Repository Structure
[Full structure here - truncated for brevity]

## File Contents

### File: ./.git/hooks/pre-commit.sample
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/hooks/pre-commit.sample]
#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --type=bool hooks.allownonascii)

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ "$allownonascii" != "true" ] &&
	# Note that the use of brackets around a tr range is ok here, (it's
	# even required, for portability to Solaris 10's /usr/bin/tr), since
	# the square bracket bytes happen to fall in the designated range.
	test $(git diff-index --cached --name-only --diff-filter=A -z $against |
	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
	cat <<\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
	exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --

---
### File: ./.git/objects/pack/pack-9de9735c7bd3e2562b62ce98e66be5c8684fdb52.pack
[Error: 'utf-8' codec can't decode byte 0x9c in position 12: invalid start byte]
---
### File: ./.github/YardMaster Analysis ReportPart1GeneratedMarch032025
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.github/YardMaster Analysis ReportPart1GeneratedMarch032025]
# YardMaster Analysis ReportPart1GeneratedMarch042025  
Generated: March 03, 2025  

## Repository Structure  
ai.redlionsalvage.net/  
├── .gitignore  
├── LICENSE  
├── README.md  
├── composer.json  
├── composer.lock  
├── index.php  
├── test_deployment.txt  
├── .github/  
│   ├── workflows/  
│   │   ├── deploy.yml  
│   ├── YardMaster_Analysis_Report.md  
├── ai.redlionsalvage.net/  
│   ├── api/  
│   │   ├── employee_management/  
│   │   │   ├── add_employee.php  
│   │   │   ├── delete_employee.php  
│   │   │   ├── get_employees.php  
│   │   │   ├── suspend_employee.php  
│   │   │   ├── update_employee.php  
│   │   ├── fleet/  
│   │   │   ├── add_vehicle.php  
│   │   │   ├── assign_driver.php  
│   │   │   ├── check expirations.php  
│   │   │   ├── get_driver_history.php  
│   │   │   ├── get_fleet_vehicles.php  
│   │   │   ├── ocr_receipt.py  
│   │   │   ├── update_mileage.php  
│   │   │   ├── upload_document.php  
│   │   │   ├── upload_receipt.php  
│   │   ├── inventory/  
│   │   │   ├── get_parts.php  
│   │   │   ├── get_vehicles.php  
│   │   ├── pos/  
│   │   │   ├── open_drawer.php  
│   │   │   ├── print_receipt.php  
│   │   │   ├── record_sale.php  
│   │   ├── scrap/  
│   │   │   ├── record_purchase.php  
│   │   ├── timeclock/  
│   │   │   ├── add_extra_time.php  
│   │   │   ├── end_break.php  
│   │   │   ├── get_employee_status.php  
│   │   │   ├── get_extra_time.php  
│   │   │   ├── get_time_log.php  
│   │   │   ├── get_time_status.php  
│   │   │   ├── get_yardman_stats.php  
│   │   │   ├── log_extra_time.php  
│   │   │   ├── start_break.php  
│   │   ├── vehicle_pickup/  
│   │   │   ├── get_pending_vehicles.php  
│   │   │   ├── process_pending.php  
│   │   │   ├── submit_pending.php  
│   │   ├── config.php  
│   │   ├── employee.php  
│   │   ├── get_user_roles.php  
│   │   ├── login.php  
│   │   ├── logout.php  
│   │   ├── timeclock.php  
│   │   ├── vehicle_mangement.php  
├── api/  
│   ├── employee_management/  
│   │   ├── add_employee.php  
│   │   ├── delete_employee.php  
│   │   ├── get_employees.php  
│   │   ├── suspend_employee.php  
│   │   ├── update_employee.php  
│   ├── fleet/  
│   │   ├── add_vehicle.php  
│   │   ├── assign_driver.php  
│   │   ├── check expirations.php  
│   │   ├── documents.php  
│   │   ├── get_driver_history.php  
│   │   ├── get_fleet_vehicles.php  
│   │   ├── ocr_receipt.py  
│   │   ├── update_mileage.php  
│   │   ├── upload_document.php  
│   │   ├── upload_receipt.php  
│   │   ├── vehicles.php  
├── database/  
│   ├── schema.sql  
[Truncated—full structure as you provided]  

## File Contents  

### Shared Server Environment
Generated from `phpinfo()` on March 05, 2025, updated March 06, 2025:
- **PHP Version**: 8.3.17
- **System**: Linux `web26.us.cloudlogin.co`, kernel 5.10.233-xeon-hst #1 SMP Fri Jan 10 12:38:21 UTC 2025 x86_64
- **Server API**: CGI/FastCGI
- **Hostname**: `web26.us.cloudlogin.co` (mapped to `ai.redlionsalvage.net` domain)
- **Relevant Modules**:
  - **FTP**: Enabled (`--enable-ftp`, supports FTPS)
  - **cURL**: Enabled (`--with-curl=/usr/local/curl/`, cURL 7.61.1)
  - **OpenSSL**: Enabled (`--with-openssl`, OpenSSL 1.1.1k FIPS)
  - **MySQL**: `pdo_mysql`, `mysqli` (matches `config.php`, MySQLnd 8.3.17)
- **Configuration**:
  - PHP.ini Path: `/home/sys/php8.3/php.ini`
  - Upload Limits: `upload_max_filesize=100M`, `post_max_size=8M`
  - Default Socket: `/var/run/mysqld/mysqld.sock`
- **Deployment Details**:
  - **FTP Host**: `web26.us.cloudlogin.co` (confirmed via run #163, March 06, 2025)
  - **FTP Path**: `/home/salvageyard/public_html/ai.redlionsalvage.net` (username `salvageyard`, confirmed via run #165)
  - **Secrets**: `FTP_HOST`, `FTP_USERNAME` (length 33, e.g., `salvageyard@ai.redlionsalvage.net`), `FTP_PASSWORD` (length 8)
  - **Method**: `lftp` with passive mode, excludes `.git*`, `.github/`, `.gitignore`, `composer.lock`
  - **Status**: Deployment succeeded in run #165 (March 06, 2025, 3m 27s)
- **Notes**: 
  - No SSH support (no `ssh2` module)—initial SSH attempts failed (run #160).
  - FTP deployment fixed by installing `lftp` (run #165) after hostname correction from `ai.redlionsalvage.net`.

### File: .github/workflows/deploy.yml  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/.github/workflows/deploy.yml]  
name: Deploy to Server  
on:  
  push:  
    branches:  
      - main  
jobs:  
  deploy:  
    runs-on: ubuntu-latest  
    steps:  
      - uses: actions/checkout@v2  
      - name: Install lftp  
        run: |  
          sudo apt-get update  
          sudo apt-get install -y lftp  
      - name: Deploy to Server via FTP  
        env:  
          FTP_HOST: ${{ secrets.FTP_HOST }}  
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}  
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}  
          FTP_REMOTE_DIR: /home/salvageyard/public_html/ai.redlionsalvage.net  
        run: |  
          echo "Deploying to $FTP_HOST"  
          lftp -u "$FTP_USERNAME,$FTP_PASSWORD" "$FTP_HOST" <<EOF  
          set ftp:passive-mode true  
          mirror -R --exclude-glob .git* --exclude-glob .github/ --exclude .gitignore --exclude composer.lock ./ $FTP_REMOTE_DIR  
          quit  
          EOF  
          echo "Deployment complete"  
---

### File: api/auth.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/auth.php]  
<?php  
session_start();  

if (!isset($_SESSION['user_id'])) {  
    header('HTTP/1.1 401 Unauthorized');  
    echo json_encode(['error' => 'Not authenticated']);  
    exit();  
}  
?>

### File: api/employee_management/add_employee.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/employee_management/add_employee.php]  
<?php  
session_start();  
require_once '../../config.php';  

if ($_SESSION['role'] !== 'admin') {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST') {  
    $username = $_POST['username'];  
    $password = password_hash($_POST['password'], PASSWORD_DEFAULT);  
    $first_name = $_POST['first_name'];  
    $last_name = $_POST['last_name'];  
    $email = $_POST['email'];  
    $phone = $_POST['phone'];  
    $role = $_POST['role'];  

    $stmt = $pdo->prepare("INSERT INTO employees (username, password, first_name, last_name, email, phone, role) VALUES (?, ?, ?, ?, ?, ?, ?)");  
    $success = $stmt->execute([$username, $password, $first_name, $last_name, $email, $phone, $role]);  

    if ($success) {  
        echo json_encode(['success' => 'Employee added']);  
    } else {  
        echo json_encode(['error' => 'Failed to add employee']);  
    }  
}  
?>

### File: api/employee_management/delete_employee.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/employee_management/delete_employee.php]  
<?php  
session_start();  
require_once '../../config.php';  

if ($_SESSION['role'] !== 'admin') {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST') {  
    $employee_id = $_POST['employee_id'];  

    $stmt = $pdo->prepare("DELETE FROM employees WHERE id = ?");  
    $success = $stmt->execute([$employee_id]);  

    if ($success) {  
        echo json_encode(['success' => 'Employee deleted']);  
    } else {  
        echo json_encode(['error' => 'Failed to delete employee']);  
    }  
}  
?>

### File: api/employee_management/get_employees.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/employee_management/get_employees.php]  
<?php  
session_start();  
require_once '../../config.php';  

if ($_SESSION['role'] !== 'admin') {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

$stmt = $pdo->prepare("SELECT id, username, first_name, last_name, email, phone, role, status FROM employees");  
$stmt->execute();  
$employees = $stmt->fetchAll(PDO::FETCH_ASSOC);  

echo json_encode($employees);  
?>

### File: api/employee_management/suspend_employee.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/employee_management/suspend_employee.php]  
<?php  
session_start();  
require_once '../../config.php';  

if ($_SESSION['role'] !== 'admin') {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST') {  
    $employee_id = $_POST['employee_id'];  
    $status = $_POST['status']; // 'active', 'suspended', 'terminated'  

    $stmt = $pdo->prepare("UPDATE employees SET status = ? WHERE id = ?");  
    $success = $stmt->execute([$status, $employee_id]);  

    if ($success) {  
        echo json_encode(['success' => 'Employee status updated']);  
    } else {  
        echo json_encode(['error' => 'Failed to update employee status']);  
    }  
}  
?>

### File: api/employee_management/update_employee.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/employee_management/update_employee.php]  
<?php  
session_start();  
require_once '../../config.php';  

if ($_SESSION['role'] !== 'admin') {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST') {  
    $employee_id = $_POST['employee_id'];  
    $first_name = $_POST['first_name'];  
    $last_name = $_POST['last_name'];  
    $email = $_POST['email'];  
    $phone = $_POST['phone'];  
    $role = $_POST['role'];  

    $stmt = $pdo->prepare("UPDATE employees SET first_name = ?, last_name = ?, email = ?, phone = ?, role = ?, updated_at = NOW() WHERE id = ?");  
    $success = $stmt->execute([$first_name, $last_name, $email, $phone, $role, $employee_id]);  

    if ($success) {  
        echo json_encode(['success' => 'Employee updated']);  
    } else {  
        echo json_encode(['error' => 'Failed to update employee']);  
    }  
}  
?>

### File: api/fleet/add_vehicle.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/add_vehicle.php]  
<?php  
session_start();  
require_once '../../config.php';  

if (!in_array($_SESSION['role'], ['admin', 'driver'])) {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST') {  
    $vin = $_POST['vin'];  
    $make = $_POST['make'];  
    $model = $_POST['model'];  
    $year = $_POST['year'];  
    $license_plate = $_POST['license_plate'];  

    $stmt = $pdo->prepare("INSERT INTO vehicles (vin, make, model, year, license_plate) VALUES (?, ?, ?, ?, ?)");  
    $success = $stmt->execute([$vin, $make, $model, $year, $license_plate]);  

    if ($success) {  
        echo json_encode(['success' => 'Vehicle added']);  
    } else {  
        echo json_encode(['error' => 'Failed to add vehicle']);  
    }  
}  
?>

### File: api/fleet/assign_driver.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/assign_driver.php]  
<?php  
session_start();  
require_once '../../config.php';  

if ($_SESSION['role'] !== 'admin') {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST') {  
    $vehicle_id = $_POST['vehicle_id'];  
    $driver_id = $_POST['driver_id'];  

    $stmt = $pdo->prepare("UPDATE vehicles SET driver_id = ?, updated_at = NOW() WHERE id = ?");  
    $success = $stmt->execute([$driver_id, $vehicle_id]);  

    if ($success) {  
        echo json_encode(['success' => 'Driver assigned']);  
    } else {  
        echo json_encode(['error' => 'Failed to assign driver']);  
    }  
}  
?>

### File: api/fleet/check expirations.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/check expirations.php]  
<?php  
session_start();  
require_once '../../config.php';  

if (!in_array($_SESSION['role'], ['admin', 'driver'])) {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

$stmt = $pdo->prepare("SELECT id, vin, make, model, last_inspection FROM vehicles WHERE last_inspection < DATE_SUB(CURDATE(), INTERVAL 30 DAY) AND driver_id IS NOT NULL");  
$stmt->execute();  
$expired = $stmt->fetchAll(PDO::FETCH_ASSOC);  

echo json_encode($expired);  
?>

### File: api/fleet/get_driver_history.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/get_driver_history.php]  
<?php  
session_start();  
require_once '../../config.php';  

if (!in_array($_SESSION['role'], ['admin', 'driver'])) {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

$driver_id = $_GET['driver_id'] ?? $_SESSION['user_id'];  
$stmt = $pdo->prepare("SELECT v.vin, v.make, v.model, v.year FROM vehicles v WHERE v.driver_id = ?");  
$stmt->execute([$driver_id]);  
$history = $stmt->fetchAll(PDO::FETCH_ASSOC);  

echo json_encode($history);  
?>

### File: api/fleet/get_fleet_vehicles.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/get_fleet_vehicles.php]  
<?php  
session_start();  
require_once '../../config.php';  

if (!in_array($_SESSION['role'], ['admin', 'driver'])) {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

$stmt = $pdo->prepare("SELECT v.id, v.vin, v.make, v.model, v.year, v.status, v.last_inspection, e.first_name, e.last_name FROM vehicles v LEFT JOIN employees e ON v.driver_id = e.id");  
$stmt->execute();  
$vehicles = $stmt->fetchAll(PDO::FETCH_ASSOC);  

echo json_encode($vehicles);  
?>

### File: api/fleet/ocr_receipt.py  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/ocr_receipt.py]  
import pytesseract  
from PIL import Image  
import os  

def ocr_receipt(image_path):  
    try:  
        img = Image.open(image_path)  
        text = pytesseract.image_to_string(img)  
        return {"success": True, "text": text}  
    except Exception as e:  
        return {"success": False, "error": str(e)}  

if __name__ == "__main__":  
    import sys  
    if len(sys.argv) > 1:  
        result = ocr_receipt(sys.argv[1])  
        print(result)  
---

### File: api/fleet/update_mileage.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/update_mileage.php]  
<?php  
session_start();  
require_once '../../config.php';  

if (!in_array($_SESSION['role'], ['admin', 'driver'])) {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST') {  
    $vehicle_id = $_POST['vehicle_id'];  
    $mileage = $_POST['mileage'];  

    $stmt = $pdo->prepare("UPDATE vehicles SET mileage = ? WHERE id = ?");  
    $success = $stmt->execute([$mileage, $vehicle_id]);  

    if ($success) {  
        echo json_encode(['success' => 'Mileage updated']);  
    } else {  
        echo json_encode(['error' => 'Failed to update mileage']);  
    }  
}  
?>

### File: api/fleet/upload_document.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/upload_document.php]  
<?php  
session_start();  
require_once '../../config.php';  

if (!in_array($_SESSION['role'], ['admin', 'driver'])) {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_FILES['document'])) {  
    $vehicle_id = $_POST['vehicle_id'];  
    $file = $_FILES['document'];  
    $upload_dir = '../../uploads/documents/';  
    $file_name = $vehicle_id . '_' . time() . '_' . basename($file['name']);  
    $target_path = $upload_dir . $file_name;  

    if (move_uploaded_file($file['tmp_name'], $target_path)) {  
        echo json_encode(['success' => 'Document uploaded', 'path' => $file_name]);  
    } else {  
        echo json_encode(['error' => 'Failed to upload document']);  
    }  
} else {  
    echo json_encode(['error' => 'No file uploaded']);  
}  
?>

### File: api/fleet/upload_receipt.php  
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/api/fleet/upload_receipt.php]  
<?php  
session_start();  
require_once '../../config.php';  

if (!in_array($_SESSION['role'], ['admin', 'driver'])) {  
    echo json_encode(['error' => 'Unauthorized']);  
    exit();  
}  

if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_FILES['receipt'])) {  
    $vehicle_id = $_POST['vehicle_id'];  
    $file = $_FILES['receipt'];  
    $upload_dir = '../../uploads/receipts/';  
    $file_name = $vehicle_id . '_' . time() . '_' . basename($file['name']);  
    $target_path = $upload_dir . $file_name;  

    if (move_uploaded_file($file['tmp_name'], $target_path)) {  
        echo json_encode(['success' => 'Receipt uploaded', 'path' => $file_name]);  
    } else {  
        echo json_encode(['error' => 'Failed to upload receipt']);  
    }  
} else {  
    echo json_encode(['error' => 'No file uploaded']);  
}  
?>

Continued in YardMaster Analysis ReportPart2GeneratedMarch032025  

---
