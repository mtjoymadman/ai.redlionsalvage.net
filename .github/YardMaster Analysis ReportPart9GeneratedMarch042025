# YardMaster Analysis ReportPart9GeneratedMarch042025
Generated: March 04, 2025

## Repository Structure
[Full structure here - truncated for brevity]

## File Contents

### File: ./.git/hooks/pre-applypatch.sample
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/hooks/pre-applypatch.sample]
#!/bin/sh
#
# An example hook script to verify what is about to be committed
# by applypatch from an e-mail message.
#
# The hook should exit with non-zero status after issuing an
# appropriate message if it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-applypatch".

. git-sh-setup
precommit="$(git rev-parse --git-path hooks/pre-commit)"
test -x "$precommit" && exec "$precommit" ${1+"$@"}
:

---
### File: ./.git/objects/pack/pack-9de9735c7bd3e2562b62ce98e66be5c8684fdb52.idx
[Error: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte]
---
### File: ./.github/YardMaster Analysis ReportPart14GeneratedMarch042025
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.github/YardMaster Analysis ReportPart14GeneratedMarch042025]
# YardMaster Analysis ReportPart14GeneratedMarch042025
Generated: March 04, 2025

## Repository Structure
[Full structure here - truncated for brevity]

## File Contents

### File: ./.git/hooks/pre-receive.sample
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/hooks/pre-receive.sample]
#!/bin/sh
#
# An example hook script to make use of push options.
# The example simply echoes all push options that start with 'echoback='
# and rejects all pushes when the "reject" push option is used.
#
# To enable this hook, rename this file to "pre-receive".

if test -n "$GIT_PUSH_OPTION_COUNT"
then
	i=0
	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
	do
		eval "value=\$GIT_PUSH_OPTION_$i"
		case "$value" in
		echoback=*)
			echo "echo from the pre-receive-hook: ${value#*=}" >&2
			;;
		reject)
			exit 1
		esac
		i=$((i + 1))
	done
fi

---
### File: ./.git/refs/remotes/origin/main
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/refs/remotes/origin/main]
b286157a8695291932e20de1407cf527d67d8ca7

---
### File: ./.github/YardMaster Analysis ReportPart8GeneratedMarch032025
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.github/YardMaster Analysis ReportPart8GeneratedMarch032025]
# YardMaster Analysis ReportPart8GeneratedMarch032025
Generated: March 03, 2025

## Repository Structure
[Full structure here - truncated for brevity]

## File Contents

### File: ./.git/hooks/post-update.sample
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/hooks/post-update.sample]
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info

---
### File: ./.git/logs/refs/heads/main
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/logs/refs/heads/main]
0000000000000000000000000000000000000000 2d8947b0cf06a8a245724342ec2816295b2fc81f runner <runner@fv-az1326-577.(none)> 1741036606 +0000	branch: Created from refs/remotes/origin/main

---
### File: ./.github/YardMaster Analysis ReportPart7GeneratedMarch032025
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.github/YardMaster Analysis ReportPart7GeneratedMarch032025]
# YardMaster Analysis ReportPart7GeneratedMarch032025
Generated: March 03, 2025

## Repository Structure
[Full structure here - truncated for brevity]

## File Contents

### File: ./.git/hooks/fsmonitor-watchman.sample
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/hooks/fsmonitor-watchman.sample]
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}

---
### File: ./.git/logs/HEAD
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/logs/HEAD]
0000000000000000000000000000000000000000 2d8947b0cf06a8a245724342ec2816295b2fc81f runner <runner@fv-az1326-577.(none)> 1741036606 +0000	checkout: moving from master to main

---

---

---

---
### File: ./.github/YardMaster Analysis ReportPart8GeneratedMarch032025
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.github/YardMaster Analysis ReportPart8GeneratedMarch032025]
# YardMaster Analysis ReportPart8GeneratedMarch032025
Generated: March 03, 2025

## Repository Structure
[Full structure here - truncated for brevity]

## File Contents

### File: ./.git/hooks/post-update.sample
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/hooks/post-update.sample]
#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to "post-update".

exec git update-server-info

---
### File: ./.git/logs/refs/heads/main
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/logs/refs/heads/main]
0000000000000000000000000000000000000000 2d8947b0cf06a8a245724342ec2816295b2fc81f runner <runner@fv-az1326-577.(none)> 1741036606 +0000	branch: Created from refs/remotes/origin/main

---
### File: ./.github/YardMaster Analysis ReportPart7GeneratedMarch032025
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.github/YardMaster Analysis ReportPart7GeneratedMarch032025]
# YardMaster Analysis ReportPart7GeneratedMarch032025
Generated: March 03, 2025

## Repository Structure
[Full structure here - truncated for brevity]

## File Contents

### File: ./.git/hooks/fsmonitor-watchman.sample
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/hooks/fsmonitor-watchman.sample]
#!/usr/bin/perl

use strict;
use warnings;
use IPC::Open2;

# An example hook script to integrate Watchman
# (https://facebook.github.io/watchman/) with git to speed up detecting
# new and modified files.
#
# The hook is passed a version (currently 2) and last update token
# formatted as a string and outputs to stdout a new update token and
# all files that have been modified since the update token. Paths must
# be relative to the root of the working tree and separated by a single NUL.
#
# To enable this hook, rename this file to "query-watchman" and set
# 'git config core.fsmonitor .git/hooks/query-watchman'
#
my ($version, $last_update_token) = @ARGV;

# Uncomment for debugging
# print STDERR "$0 $version $last_update_token\n";

# Check the hook interface version
if ($version ne 2) {
	die "Unsupported query-fsmonitor hook version '$version'.\n" .
	    "Falling back to scanning...\n";
}

my $git_work_tree = get_working_dir();

my $retry = 1;

my $json_pkg;
eval {
	require JSON::XS;
	$json_pkg = "JSON::XS";
	1;
} or do {
	require JSON::PP;
	$json_pkg = "JSON::PP";
};

launch_watchman();

sub launch_watchman {
	my $o = watchman_query();
	if (is_work_tree_watched($o)) {
		output_result($o->{clock}, @{$o->{files}});
	}
}

sub output_result {
	my ($clockid, @files) = @_;

	# Uncomment for debugging watchman output
	# open (my $fh, ">", ".git/watchman-output.out");
	# binmode $fh, ":utf8";
	# print $fh "$clockid\n@files\n";
	# close $fh;

	binmode STDOUT, ":utf8";
	print $clockid;
	print "\0";
	local $, = "\0";
	print @files;
}

sub watchman_clock {
	my $response = qx/watchman clock "$git_work_tree"/;
	die "Failed to get clock id on '$git_work_tree'.\n" .
		"Falling back to scanning...\n" if $? != 0;

	return $json_pkg->new->utf8->decode($response);
}

sub watchman_query {
	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
	or die "open2() failed: $!\n" .
	"Falling back to scanning...\n";

	# In the query expression below we're asking for names of files that
	# changed since $last_update_token but not from the .git folder.
	#
	# To accomplish this, we're using the "since" generator to use the
	# recency index to select candidate nodes and "fields" to limit the
	# output to file names only. Then we're using the "expression" term to
	# further constrain the results.
	my $last_update_line = "";
	if (substr($last_update_token, 0, 1) eq "c") {
		$last_update_token = "\"$last_update_token\"";
		$last_update_line = qq[\n"since": $last_update_token,];
	}
	my $query = <<"	END";
		["query", "$git_work_tree", {$last_update_line
			"fields": ["name"],
			"expression": ["not", ["dirname", ".git"]]
		}]
	END

	# Uncomment for debugging the watchman query
	# open (my $fh, ">", ".git/watchman-query.json");
	# print $fh $query;
	# close $fh;

	print CHLD_IN $query;
	close CHLD_IN;
	my $response = do {local $/; <CHLD_OUT>};

	# Uncomment for debugging the watch response
	# open ($fh, ">", ".git/watchman-response.json");
	# print $fh $response;
	# close $fh;

	die "Watchman: command returned no output.\n" .
	"Falling back to scanning...\n" if $response eq "";
	die "Watchman: command returned invalid output: $response\n" .
	"Falling back to scanning...\n" unless $response =~ /^\{/;

	return $json_pkg->new->utf8->decode($response);
}

sub is_work_tree_watched {
	my ($output) = @_;
	my $error = $output->{error};
	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
		$retry--;
		my $response = qx/watchman watch "$git_work_tree"/;
		die "Failed to make watchman watch '$git_work_tree'.\n" .
		    "Falling back to scanning...\n" if $? != 0;
		$output = $json_pkg->new->utf8->decode($response);
		$error = $output->{error};
		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		# Uncomment for debugging watchman output
		# open (my $fh, ">", ".git/watchman-output.out");
		# close $fh;

		# Watchman will always return all files on the first query so
		# return the fast "everything is dirty" flag to git and do the
		# Watchman query just to get it over with now so we won't pay
		# the cost in git to look up each individual file.
		my $o = watchman_clock();
		$error = $output->{error};

		die "Watchman: $error.\n" .
		"Falling back to scanning...\n" if $error;

		output_result($o->{clock}, ("/"));
		$last_update_token = $o->{clock};

		eval { launch_watchman() };
		return 0;
	}

	die "Watchman: $error.\n" .
	"Falling back to scanning...\n" if $error;

	return 1;
}

sub get_working_dir {
	my $working_dir;
	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
		$working_dir = Win32::GetCwd();
		$working_dir =~ tr/\\/\//;
	} else {
		require Cwd;
		$working_dir = Cwd::cwd();
	}

	return $working_dir;
}

---
### File: ./.git/logs/HEAD
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./.git/logs/HEAD]
0000000000000000000000000000000000000000 2d8947b0cf06a8a245724342ec2816295b2fc81f runner <runner@fv-az1326-577.(none)> 1741036606 +0000	checkout: moving from master to main

---

---

---
### File: ./RedLionSalvageAi/ai.redlionsalvage.net-error.log.txt
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./RedLionSalvageAi/ai.redlionsalvage.net-error.log.txt]
[Sat Mar 01 02:15:29 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:15:29 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:15:45 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:16:10 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:16:10 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:16:13 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:16:13 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:16:14 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:16:17 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:16:17 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:16:17 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:16:24 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:16:25 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:00 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:01 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:02 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:13 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:13 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:25 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:25 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:29 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:19:29 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:29 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:32 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:19:32 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:19:32 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:23 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:28 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:28:28 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:28 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:30 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:30 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:45 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:55 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:55 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:59 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:28:58 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:28:59 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:29:01 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:29:01 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:29:01 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:31:55 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:31:56 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:32:12 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:32:12 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:32:14 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:32:14 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:32:14 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:32:17 2025] [error] mod_fcgid: stderr: PHP Notice:  session_start(): Ignoring session_start() because a session is already active (started from /home/www/ai.redlionsalvage.net/api/get_user_roles.php on line 2) in /home/www/ai.redlionsalvage.net/api/config.php on line 2
[Sat Mar 01 02:32:17 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)
[Sat Mar 01 02:32:17 2025] [error] mod_fcgid: stderr: config.php: MySQL timezone set to -05:00 (EST)

---
### File: ./RedLionSalvageAi/fpdf186/doc/getpagewidth.htm
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./RedLionSalvageAi/fpdf186/doc/getpagewidth.htm]
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>GetPageWidth</title>
<link type="text/css" rel="stylesheet" href="../fpdf.css">
</head>
<body>
<h1>GetPageWidth</h1>
<code><b>float</b> GetPageWidth()</code>
<h2>Description</h2>
Returns the current page width.
<h2>See also</h2>
<a href="getpageheight.htm">GetPageHeight</a>
<hr style="margin-top:1.5em">
<div style="text-align:center"><a href="index.htm">Index</a></div>
</body>
</html>

---
### File: ./RedLionSalvageAi/fpdf186/doc/setautopagebreak.htm
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./RedLionSalvageAi/fpdf186/doc/setautopagebreak.htm]
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>SetAutoPageBreak</title>
<link type="text/css" rel="stylesheet" href="../fpdf.css">
</head>
<body>
<h1>SetAutoPageBreak</h1>
<code>SetAutoPageBreak(<b>boolean</b> auto [, <b>float</b> margin])</code>
<h2>Description</h2>
Enables or disables the automatic page breaking mode. When enabling, the second parameter is
the distance from the bottom of the page that defines the triggering limit. By default, the
mode is on and the margin is 2 cm.
<h2>Parameters</h2>
<dl class="param">
<dt><code>auto</code></dt>
<dd>
Boolean indicating if mode should be on or off.
</dd>
<dt><code>margin</code></dt>
<dd>
Distance from the bottom of the page.
</dd>
</dl>
<h2>See also</h2>
<a href="cell.htm">Cell</a>,
<a href="multicell.htm">MultiCell</a>,
<a href="acceptpagebreak.htm">AcceptPageBreak</a>
<hr style="margin-top:1.5em">
<div style="text-align:center"><a href="index.htm">Index</a></div>
</body>
</html>

---
### File: ./RedLionSalvageAi/fpdf186/doc/settextcolor.htm
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./RedLionSalvageAi/fpdf186/doc/settextcolor.htm]
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>SetTextColor</title>
<link type="text/css" rel="stylesheet" href="../fpdf.css">
</head>
<body>
<h1>SetTextColor</h1>
<code>SetTextColor(<b>int</b> r [, <b>int</b> g, <b>int</b> b])</code>
<h2>Description</h2>
Defines the color used for text. It can be expressed in RGB components or gray scale. The
method can be called before the first page is created and the value is retained from page to
page.
<h2>Parameters</h2>
<dl class="param">
<dt><code>r</code></dt>
<dd>
If <code>g</code> et <code>b</code> are given, red component; if not, indicates the gray level.
Value between 0 and 255.
</dd>
<dt><code>g</code></dt>
<dd>
Green component (between 0 and 255).
</dd>
<dt><code>b</code></dt>
<dd>
Blue component (between 0 and 255).
</dd>
</dl>
<h2>See also</h2>
<a href="setdrawcolor.htm">SetDrawColor</a>,
<a href="setfillcolor.htm">SetFillColor</a>,
<a href="text.htm">Text</a>,
<a href="cell.htm">Cell</a>,
<a href="multicell.htm">MultiCell</a>
<hr style="margin-top:1.5em">
<div style="text-align:center"><a href="index.htm">Index</a></div>
</body>
</html>

---
### File: ./RedLionSalvageAi/fpdf186/font/helveticai.php
[Fetched from https://raw.githubusercontent.com/mtjoymadman/ai.redlionsalvage.net/main/./RedLionSalvageAi/fpdf186/font/helveticai.php]
<?php
$type = 'Core';
$name = 'Helvetica-Oblique';
$up = -100;
$ut = 50;
$cw = array(
	chr(0)=>278,chr(1)=>278,chr(2)=>278,chr(3)=>278,chr(4)=>278,chr(5)=>278,chr(6)=>278,chr(7)=>278,chr(8)=>278,chr(9)=>278,chr(10)=>278,chr(11)=>278,chr(12)=>278,chr(13)=>278,chr(14)=>278,chr(15)=>278,chr(16)=>278,chr(17)=>278,chr(18)=>278,chr(19)=>278,chr(20)=>278,chr(21)=>278,
	chr(22)=>278,chr(23)=>278,chr(24)=>278,chr(25)=>278,chr(26)=>278,chr(27)=>278,chr(28)=>278,chr(29)=>278,chr(30)=>278,chr(31)=>278,' '=>278,'!'=>278,'"'=>355,'#'=>556,'$'=>556,'%'=>889,'&'=>667,'\''=>191,'('=>333,')'=>333,'*'=>389,'+'=>584,
	','=>278,'-'=>333,'.'=>278,'/'=>278,'0'=>556,'1'=>556,'2'=>556,'3'=>556,'4'=>556,'5'=>556,'6'=>556,'7'=>556,'8'=>556,'9'=>556,':'=>278,';'=>278,'<'=>584,'='=>584,'>'=>584,'?'=>556,'@'=>1015,'A'=>667,
	'B'=>667,'C'=>722,'D'=>722,'E'=>667,'F'=>611,'G'=>778,'H'=>722,'I'=>278,'J'=>500,'K'=>667,'L'=>556,'M'=>833,'N'=>722,'O'=>778,'P'=>667,'Q'=>778,'R'=>722,'S'=>667,'T'=>611,'U'=>722,'V'=>667,'W'=>944,
	'X'=>667,'Y'=>667,'Z'=>611,'['=>278,'\\'=>278,']'=>278,'^'=>469,'_'=>556,'`'=>333,'a'=>556,'b'=>556,'c'=>500,'d'=>556,'e'=>556,'f'=>278,'g'=>556,'h'=>556,'i'=>222,'j'=>222,'k'=>500,'l'=>222,'m'=>833,
	'n'=>556,'o'=>556,'p'=>556,'q'=>556,'r'=>333,'s'=>500,'t'=>278,'u'=>556,'v'=>500,'w'=>722,'x'=>500,'y'=>500,'z'=>500,'{'=>334,'|'=>260,'}'=>334,'~'=>584,chr(127)=>350,chr(128)=>556,chr(129)=>350,chr(130)=>222,chr(131)=>556,
	chr(132)=>333,chr(133)=>1000,chr(134)=>556,chr(135)=>556,chr(136)=>333,chr(137)=>1000,chr(138)=>667,chr(139)=>333,chr(140)=>1000,chr(141)=>350,chr(142)=>611,chr(143)=>350,chr(144)=>350,chr(145)=>222,chr(146)=>222,chr(147)=>333,chr(148)=>333,chr(149)=>350,chr(150)=>556,chr(151)=>1000,chr(152)=>333,chr(153)=>1000,
	chr(154)=>500,chr(155)=>333,chr(156)=>944,chr(157)=>350,chr(158)=>500,chr(159)=>667,chr(160)=>278,chr(161)=>333,chr(162)=>556,chr(163)=>556,chr(164)=>556,chr(165)=>556,chr(166)=>260,chr(167)=>556,chr(168)=>333,chr(169)=>737,chr(170)=>370,chr(171)=>556,chr(172)=>584,chr(173)=>333,chr(174)=>737,chr(175)=>333,
	chr(176)=>400,chr(177)=>584,chr(178)=>333,chr(179)=>333,chr(180)=>333,chr(181)=>556,chr(182)=>537,chr(183)=>278,chr(184)=>333,chr(185)=>333,chr(186)=>365,chr(187)=>556,chr(188)=>834,chr(189)=>834,chr(190)=>834,chr(191)=>611,chr(192)=>667,chr(193)=>667,chr(194)=>667,chr(195)=>667,chr(196)=>667,chr(197)=>667,
	chr(198)=>1000,chr(199)=>722,chr(200)=>667,chr(201)=>667,chr(202)=>667,chr(203)=>667,chr(204)=>278,chr(205)=>278,chr(206)=>278,chr(207)=>278,chr(208)=>722,chr(209)=>722,chr(210)=>778,chr(211)=>778,chr(212)=>778,chr(213)=>778,chr(214)=>778,chr(215)=>584,chr(216)=>778,chr(217)=>722,chr(218)=>722,chr(219)=>722,
	chr(220)=>722,chr(221)=>667,chr(222)=>667,chr(223)=>611,chr(224)=>556,chr(225)=>556,chr(226)=>556,chr(227)=>556,chr(228)=>556,chr(229)=>556,chr(230)=>889,chr(231)=>500,chr(232)=>556,chr(233)=>556,chr(234)=>556,chr(235)=>556,chr(236)=>278,chr(237)=>278,chr(238)=>278,chr(239)=>278,chr(240)=>556,chr(241)=>556,
	chr(242)=>556,chr(243)=>556,chr(244)=>556,chr(245)=>556,chr(246)=>556,chr(247)=>584,chr(248)=>611,chr(249)=>556,chr(250)=>556,chr(251)=>556,chr(252)=>556,chr(253)=>500,chr(254)=>556,chr(255)=>500);
$enc = 'cp1252';
$uv = array(0=>array(0,128),128=>8364,130=>8218,131=>402,132=>8222,133=>8230,134=>array(8224,2),136=>710,137=>8240,138=>352,139=>8249,140=>338,142=>381,145=>array(8216,2),147=>array(8220,2),149=>8226,150=>array(8211,2),152=>732,153=>8482,154=>353,155=>8250,156=>339,158=>382,159=>376,160=>array(160,96));
?>

---
